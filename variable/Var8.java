package variable;

public class Var8 {

	public static void main(String[] args) {
		//정수
		byte b = 127; //-128 ~ 127
		short s = 32767; // -32,768 ~ 32,767
		int i = 2147483647; //-2,147,483,648 ~ 2,147,483,647
		
		//-9,223,372,036,854,775,807 ~ 9,223,372,036,854,775,807
		long l = 9223372036854775807L;
		
		//실수
		float f = 10.0f; // 표현범위가 적어 잘 사용하지 않는다.
		double d = 10.0; // 실제로 많이 사용
		
		/*
		 * 메모리를 작게 사용하면 작은 숫자를 표현할 수 잇고, 메모리를 많이 사용함녀 큰 숫자를 표현할 수 있다.
		 * 변수를 선언하면 표현 범위에 따라 메모리 공간을 차지한다. 그래서 필요에 맞ㄷ록 다양한 타입을 제공한다.
		 * 
		 * 정수형 
		 * byte(1byte), short(2byte) , int(4byte), long(8byte)
		 * 
		 * 실수형
		 * float(4byte), double(8byte)
		 * 
		 * 기타 
		 * boolean(1byte), char(1byte), String(메모리 사용량은 문자 길이에 따라 동적으로 달라진다.)
		 * 
		 * 리터럴 타입 지정
		 * - 정수 리터럴은 int 를 기본으로 사용한다. 따라서 int 범위까지 표현할 수 있다. 숫자가 int 범위인 약 20억을 넘어가면L
		 * 	을 붙여서 정수 리터럴을 long 으로 변경해야 한다. (대문자 L, 소문자 l 모두 가능하다 그런데 소문자 l은 숫자 1과 착각할 수 있어서 권장하지 않는다.)
		 * - 실수 리터럴은 기본이 double 형을 사용한다. float 형을 사용하면 f 를붙여서 float 형으로 지정해야 한다.
		 *
		 * 실무에서 잘 사용하지 않는 타입
		 * byte : 표현 길이가 너무 작다. 또는 자바는 기본으로 4byte(int)를 효율적으로 계산하도록 설계되어 있다. int를 사용하자
		 *  short : 표현 길이가 너무작다. 또 자바는 기본으로 4byte(int)를 효율적으로 계산하도록 설계되어있다. int를 사용하자
		 *  float : 표현 길이와 정밀도가 낮다. 실수형은 double을 사용하자
		 *  char : 문자 하나를 표현하는 일은 거의 없다. 문자 하나를 표현할 때도 문자열으 사용할 수있다. 
		 *  예를 들어 String a = "a" 와 같이 사용하면된다.
		 * 
		 * 메모리 용량은 매우 저렴하기 때문에 메모리 용량을 약간 절약하기 보다는 개발 속도나 효율에 초점을 맞춘느 것이 더 효과적이다.
		 * 
		 * 자주 사용하는 타입
		 * - 정수 int, long : 자바는 정수에 기본으로 int 를 사용한다. 만약 20억이 넘을 것 같으면 long 을 쓰면 된다.
		 * - 실수  double : 실수는 고민하지 말고 double 을 쓰면 된다.
		 * - 블린형 boolean : true, false 참 거짓을 표현한다. 이후 조건문에서 자주 사용된다.
		 * - 문자열 String : 문자를 다룰 때는 문자 하나든 문자열이든 모두 String 을 사용하는 것이 편리하다. "a"
		 * */
		
		/* 변수 명명 규칙
		 * 낙타표기법은 프로그래밍에서 변수, 함수, 클래스 등의 이름을 지을 때 많이 사용하는 표기법 중 하나이다. 이 표기법의 이름은 이름이 여러 단어로 구성되어 있을때
		 * , 각 단어의 첫 글자가 대문자로 시작하고, 이 대문자들이 낙타의 등봉처럼 보이는 것에서 유래했다. 낙타표기법을 사용하면 이름에 공백을 넣지 않고도 여러 단어를 쉽게 구분 할 수 있으므로, 변수
		 * 의 이름을 이해하기 쉽게 만들어준다. 또한, 대부분의 프로그래밍 언어에서는 이름에공백을 포함할 수 없기 때문에, 낙타표기법은 이런 제한을 우회하는 좋은 방법이다.
		 * 
		 * 자바 언어의 관례 한번에 정리
		 * 클래스는 대문자로 시작, 나머지는 소문자로 시작
		 * - 자바에서 클래스 이름의 첫 글자는 대문자로 시작한다. 그리고 나머지는 모두 첫글자를 소문자로 시작한다. 여기에 낙타 표기법을 적용하면 된다. 이렇게 하면 모든 자바 관례를 외울 수 있다
		 * - 예시:클래스는 첫 글자 대문자, 나머지는 모두 첫 글자 소문자로 시작 + 낙타 표기법
		 *   클래스: Person, OrderDetail
		 *   변수를 포함한 나머지: firstName, userAccount
		 * -여기에 예외가 딱 2개가 있다.
		 * 		상수는 모두 대문자를 사용하고 언더바로 구분한다. 
		 * 		USER_LIMIT
		 * 		패키지는 모두 소문자를 사용한다
		 * 		org.spring.boot
		 * 
		 * 참고 : 변수 이름은 의미있고, 그 용돌르 명확하게 설명해야 한다.
		 * 	a, b: 이런 변수는 용도를 설명하지 않는다. 단순한 예제에서만 사용하는 것이 좋다.
		 *  studentConung, maxScore, userAccount, orderCount: 용도를 명확하게 설명한다.
		 */
		
		

	}

}
